{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"uz8IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBAAGG,UAAU,qBAAqBC,KAAI,iBAAYH,GAAlD,SACGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCbIG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,OAAS,EACdD,EAASE,KAAI,SAAAT,GAAO,OACrB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQU,OAE5C,mBAAG,UAAQ,oBAAX,iCCPKC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBX,EAAgBW,EAAhBX,KAAMC,EAAUU,EAAVV,MAEd,OACE,8BACG,eAED,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,SCNIY,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOZ,EAAyBW,EAAzBX,KAAMS,EAAmBE,EAAnBF,KAAML,EAAaO,EAAbP,SAE3B,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGW,IAGH,cAAC,EAAD,CAAUH,KAAMA,OAGlB,mBAAGR,UAAU,iBAAb,SACGD,IAGH,cAAC,EAAD,CAAaI,SAAUA,SCnBhBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKJ,U,qBCcnB,IAAMO,EAAQC,EAAgBT,KAAI,SAAAK,GAAI,kCAEtCA,GAFsC,IAGzCF,MARiBO,EAQCL,EAAKK,OAPlBC,EAAgBC,MAAK,SAAAT,GAAI,OAAIA,EAAKF,KAAOS,MAC3C,MAOHZ,UAf2Be,EAeKR,EAAKJ,GAdhCa,EAAmBC,QAAO,SAAAxB,GAAO,OACtCA,EAAQsB,SAAWA,QAFvB,IAA+BA,EAMVH,KAaRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QC1BrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.74608eb0.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.length > 0\n      ? (comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      )))\n      : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    }\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <p>\n      {' Posted by  '}\n\n      <a className=\"UserInfo\" href={`mailto:${email}`}>\n        {name}\n      </a>\n    </p>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const { title, body, user, comments } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <UserInfo user={user} />\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <CommentList comments={comments} />\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo key={post.id} post={post} />\n    ))}\n  </div>\n);\n","/* eslint-disable no-console */\nimport './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction findCommentsByPostsId(postId) {\n  return commentsFromServer.filter(comment => (\n    comment.postId === postId\n  ));\n}\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nexport const posts = postsFromServer.map(post => (\n  {\n    ...post,\n    user: getUserById(post.userId),\n    comments: findCommentsByPostsId(post.id),\n  }\n));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}